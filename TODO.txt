# TODO

- SoftDelete

- Versionado ej: http://simplerest.lan/api/v1/users
- "Prety print" con ?prety=true, ejemplo de la salida:
https://api.github.com/users/veesahni
- En config colocar $config['error_if_not_fillable']=false 
- Simplificar la forma de crear la conexion a la DB como en Laravel Lummen:
https://lumen.laravel.com/docs/6.x/database
- Implementar mi data-validator
- Generar Modelos con sus schemas a partir de la DB como con CRUDO usando un comando.
- Auto-joins basado en convenciones (Doctrine hace lo mismo)
- Probar en Windows
- Investigar a la competencia en frameworks MVC y API Rest
- oAuth ?
- Form de registro (front)
- Paginador (front)
- Controles más complejos como checkbox, radio, combobox
- Permisos y roles (ACL)
- Routers como en Laravel (!)
- Middlewares
- Migrations
- Sanitización a nivel de urls, FILTER_SANITIZE_URL
- Sanitización a nivel de base de datos
- Documentar !!!! <-- comenzar
- Upload de archivos con Content-type application/x-www-form-urlencoded ó multipart/form-data
https://stackoverflow.com/a/4083908/980631
Si se genera un error, detallar según:
https://www.php.net/manual/en/features.file-upload.errors.php

- Aceptar distintos "Accept" y "Content-type" y responder acordemente

- Operador LIKE como ?name[like]=*Vodka* o... ?name[like]=Vodka* o ?name[like]=*Vodka
- Consultas más complejas para API Rest incluyendo operadores lt, gt, ge, le, ne (!=) y or 
Sacar ideas de: https://dev.targetprocess.com/docs/custom-calculations

- Leer atentamente
https://www.vinaysahni.com/best-practices-for-a-pragmatic-restful-api

* "additional details embedded"
* Overriding the HTTP method
* Rate limiting
* Caching
* Errors

- Securitizar almacenamiento de tokens -- en cookies?

https://stormpath.com/blog/where-to-store-your-jwts-cookies-vs-html5-web-storage
https://medium.com/@jcbaey/authentication-in-spa-reactjs-and-vuejs-the-right-way-e4a9ac5cd9a3
https://dev.to/rdegges/please-stop-using-local-storage-1i04

- error y error description, ej: 

HTTP/1.1 401 Unauthorized
WWW-Authenticate: Bearer error="invalid_token"
  error_description="The access token expired"
Content-type: application/json
 
{
  "error": "invalid_token",
  "error_description": "The access token expired"
}