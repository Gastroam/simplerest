Lógica mejorada: 

# Login

- Sino tengo un token en mi localstorage, muestro un login
- El login hace un request y se devuelven dos (2) tokens. Los guardo en localstorage

    {
        "access_token": "2e17505e-1c34-4ea6-a901-40e49ba786fa",
        "token_type": "bearer",
        "refresh_token": "e5f19364-862d-4212-ad14-9d6275ab1a62",
        "expires_in": 59,
        "scope": "read write",
    }

# Renovación pro-activa del access token

- Periódicamente (tratando de adelantarme al vencimiento) envio el refresh token para obtener un nuevo acces token 

# Acceso a datos 

- Envio el access token y espero los datos


Logica antigua:

- Sino tengo un token en mi localstorage, muestro un login
- El login hace un request y devuelve un token. Guardo el token en localstorage

- Si tengo un token (en localstorage), lo envio en cada request en el authorization header
- Si el token no es válido (está vacio, es incorrecto o está vencido), -> le muestro el login

- Si el token está próximo a vencerse (<1 min), envio una petición de un nuevo token al servidor
- El servidor chequea que el usuario esté autenticado y si es así, entrega un nuevo token.

Más
https://www.baeldung.com/spring-security-oauth2-remember-me